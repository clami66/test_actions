name: CI

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  # This workflow contains a single job called "environment"
  environment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash -l {0}
    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Install conda (with cache), set up the environment
      - name: Cache conda
        uses: actions/cache@v1
        env:
          # Increase this value to reset cache if etc/example-environment.yml has not changed
          CACHE_NUMBER: 0
        with:
          path: ~/conda_pkgs_dir
          key:
            ${{ runner.os }}-conda-${{ env.CACHE_NUMBER }}-${{
            hashFiles('environment.yaml') }}
      - uses: conda-incubator/setup-miniconda@v2
        with:
          channel-priority: strict  
          activate-environment: env_seqitope
          environment-file: environment.yaml
          auto-activate-base: false
          use-only-tar-bz2: true
      - name: Set R cache folder
        run: |
          mkdir ~/r_pkgs_dir
      - name: Cache R
        uses: actions/cache@v2
        env:
          # Change this value to reset cache if installing new R packages
          CACHE_NUMBER: t7yuffg687sdqayjnh656dg
          R_LIBS_USER: ~/r_pkgs_dir
        with:
          path: ${{ env.R_LIBS_USER }} 
          key: ${{ runner.os }}-r-${{ env.CACHE_NUMBER }}           
      # SYNCSA not included in conda yet, remove when we fix this
      - name: Install R dependencies
        run: | #conda activate env_seqitope
          export R_LIBS_USER="~/r_pkgs_dir"
          which Rscript
          Rscript -e 'if (!require("SYNCSA")) install.packages("SYNCSA", lib=Sys.getenv("R_LIBS_USER"))'
      - name: Test R installation
        run: | #export R_LIBS_USER="~/r_pkgs_dir"
          Rscript -e 'library("deepSNV")'
      - name: Test output
        run: |
          cat test1.txt test2.txt > test_output.txt
          diff test_output.txt test3.txt || exit 1
          
          
        
          

